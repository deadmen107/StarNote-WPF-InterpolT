<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    
                     xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" 
            
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"     
             xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" 
             xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid" 
             xmlns:dxgt="http://schemas.devexpress.com/winfx/2008/xaml/grid/themekeys"
         
             xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
             xmlns:dxcn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    >

    <ResourceDictionary.MergedDictionaries>
        <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2016White.v18.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Themes/StandardControls/Brushes.xaml" />
        <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2016White.v18.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Themes/StandardControls/SharedResources.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <Visibility x:Key="Visible">Visible</Visibility>
    <Visibility x:Key="Collapsed">Collapsed</Visibility>
    <dxcn:RenderTemplate x:Key="{dxt:DropDownButtonThemeKey ResourceKey=BorderTemplate, ThemeName=Office2016White}">
        <dxcn:RenderPanel>
            <!--Background="{StaticResource Button.DefaultState.Border2}"-->
            <dxcn:RenderBorder Name="Outer" BorderBrush="{StaticResource Button.DefaultState.Border1}" BorderThickness="1" Background="#FFFCF9F9"  />
            
            <dxcn:RenderBorder Name="Focused" BorderBrush="#FF0072C6" BorderThickness="1" Visibility="Collapsed" />
        </dxcn:RenderPanel>
        <dxcn:RenderTemplate.Triggers>
            <dxcn:RenderTrigger DependencyProperty="{x:Static dx:ThemeManager.IsTouchEnabledProperty}" ValueSource="TemplatedParent" Value="True">
                <dxcn:RenderSetter TargetName="Outer" Property="MinHeight" Value="44" />
            </dxcn:RenderTrigger>
            <dxcn:RenderStateGroup Name="FocusStates">
                <dxcn:RenderStateTrigger Name="Unfocused">
                    <dxcn:RenderSetter Property="Visibility" TargetName="Focused" Value="{StaticResource Collapsed}" />
                </dxcn:RenderStateTrigger>
                <dxcn:RenderStateTrigger Name="Focused">
                    <dxcn:RenderSetter Property="Visibility" TargetName="Focused" Value="{StaticResource Visible}" />
                </dxcn:RenderStateTrigger>
            </dxcn:RenderStateGroup>
            <dxcn:RenderStateGroup Name="VisualStates">
                <dxcn:RenderStateTrigger Name="Normal"></dxcn:RenderStateTrigger>
                <dxcn:RenderStateTrigger Name="MouseOver">
                    <dxcn:RenderSetter TargetName="Outer" Property="BorderBrush" Value="{StaticResource Button.HoverState.Border1}" />
                    <dxcn:RenderSetter TargetName="Outer" Property="Background" Value="{StaticResource Button.HoverState.Border2}" />
                </dxcn:RenderStateTrigger>
                <dxcn:RenderStateTrigger Name="Pressed">
                    <dxcn:RenderSetter TargetName="Outer" Property="BorderBrush" Value="{StaticResource Button.PressedState.Border1}" />
                    <dxcn:RenderSetter TargetName="Outer" Property="Background" Value="{StaticResource Button.PressedState.Border2}" />
                </dxcn:RenderStateTrigger>
                <dxcn:RenderStateTrigger Name="Checked">
                    <dxcn:RenderSetter TargetName="Outer" Property="BorderBrush" Value="{StaticResource Button.CheckedState.Border1}" />
                    <dxcn:RenderSetter TargetName="Outer" Property="Background" Value="{StaticResource Button.CheckedState.Border2}" />
                </dxcn:RenderStateTrigger>
            </dxcn:RenderStateGroup>
            <dxcn:RenderStateGroup Name="PlacementStates">
                <dxcn:RenderStateTrigger Name="Default" />
                <dxcn:RenderStateTrigger Name="Left">
                    <dxcn:RenderSetter TargetName="Outer" Property="BorderThickness" Value="1,1,0,1" />
                    <dxcn:RenderSetter TargetName="Focused" Property="BorderThickness" Value="1,1,0,1" />
                </dxcn:RenderStateTrigger>
                <dxcn:RenderStateTrigger Name="Right">
                    <dxcn:RenderSetter TargetName="Focused" Property="BorderThickness" Value="0,1,1,1" />
                </dxcn:RenderStateTrigger>
                <dxcn:RenderStateTrigger Name="Top">
                    <dxcn:RenderSetter TargetName="Outer" Property="BorderThickness" Value="1,1,1,0" />
                    <dxcn:RenderSetter TargetName="Focused" Property="BorderThickness" Value="1,1,1,0" />
                </dxcn:RenderStateTrigger>
                <dxcn:RenderStateTrigger Name="Bottom">
                    <dxcn:RenderSetter TargetName="Focused" Property="BorderThickness" Value="1,0,1,1" />
                </dxcn:RenderStateTrigger>
            </dxcn:RenderStateGroup>
        </dxcn:RenderTemplate.Triggers>
    </dxcn:RenderTemplate>

    <dxcn:RenderTemplate x:Key="{dxt:ButtonThemeKey ResourceKey=RenderTemplate, ThemeName=Office2016White}">
        <dxcn:RenderPanel LayoutProvider="{x:Static dxcn:LayoutProvider.GridInstance}">
            <dxcn:RenderButtonBorder Name="GlyphAndContentBorder" RenderTemplate="{StaticResource ResourceKey={dxt:DropDownButtonThemeKey ResourceKey=BorderTemplate, ThemeName=Office2016White}}"/>
            <dxcn:RenderPanel Name="RenderPanel" HorizontalAlignment="Stretch">
                <dxcn:RenderPanel Margin="1" LayoutProvider="{dxcn:DockPanelLayoutProvider LastChildFill=True}">
                    <dxcn:RenderImage Name="Image" Dock="Left" Stretch="None" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    <dxcn:RenderBorder Name="Border" Dock="Left"/>
                    <dxcn:RenderContentPresenter Name="ContentPresenter" />
                </dxcn:RenderPanel>
            </dxcn:RenderPanel>
        </dxcn:RenderPanel>

        <dxcn:RenderTemplate.Triggers>
            <dxcn:RenderBinding ValueSource="TemplatedParent" DependencyProperty="{x:Static dx:SimpleButton.GlyphProperty}" TargetName="Image" TargetProperty="Source"/>
            <dxcn:RenderBinding ValueSource="TemplatedParent" DependencyProperty="{x:Static dx:SimpleButton.GlyphAlignmentProperty}" TargetName="Image" TargetProperty="Dock"/>
            <dxcn:RenderBinding ValueSource="TemplatedParent" DependencyProperty="{x:Static dx:SimpleButton.GlyphToContentOffsetProperty}" TargetName="Border" TargetProperty="Width"/>
            <dxcn:RenderBinding ValueSource="TemplatedParent" DependencyProperty="{x:Static dx:SimpleButton.GlyphToContentOffsetProperty}" TargetName="Border" TargetProperty="Height"/>
            <dxcn:RenderBinding ValueSource="TemplatedParent" DependencyProperty="{x:Static ContentControl.ContentProperty}" TargetName="ContentPresenter" />
            <dxcn:RenderBinding ValueSource="TemplatedParent" DependencyProperty="{x:Static ContentControl.ContentTemplateProperty}" TargetName="ContentPresenter" />

            <dxcn:RenderBinding ValueSource="TemplatedParent" DependencyProperty="{x:Static ContentControl.ContentTemplateSelectorProperty}" TargetName="ContentPresenter" />
            <dxcn:RenderBinding ValueSource="TemplatedParent" DependencyProperty="{x:Static ContentControl.VerticalContentAlignmentProperty}" TargetProperty="VerticalAlignment" TargetName="ContentPresenter" />
            <dxcn:RenderBinding ValueSource="TemplatedParent" DependencyProperty="{x:Static ContentControl.HorizontalContentAlignmentProperty}" TargetProperty="HorizontalAlignment" TargetName="ContentPresenter" />
            <dxcn:RenderBinding ValueSource="TemplatedParent" DependencyProperty="{x:Static ContentControl.PaddingProperty}" TargetProperty="Margin" TargetName="RenderPanel" />

            <dxcn:RenderTrigger ValueSource="TemplatedParent" DependencyProperty="{x:Static dx:SimpleButton.GlyphAlignmentProperty}" Value="Left">
                <dxcn:RenderSetter TargetName="Image" Property="Dock" Value="Left"/>
                <dxcn:RenderSetter TargetName="Border" Property="Dock" Value="Left"/>
                <dxcn:RenderSetter TargetName="ContentPresenter" Property="Dock" Value="Right"/>
            </dxcn:RenderTrigger>
            <dxcn:RenderTrigger ValueSource="TemplatedParent" DependencyProperty="{x:Static dx:SimpleButton.GlyphAlignmentProperty}" Value="Right">
                <dxcn:RenderSetter TargetName="Image" Property="Dock" Value="Right"/>
                <dxcn:RenderSetter TargetName="Border" Property="Dock" Value="Right"/>
                <dxcn:RenderSetter TargetName="ContentPresenter" Property="Dock" Value="Left"/>
            </dxcn:RenderTrigger>
            <dxcn:RenderTrigger ValueSource="TemplatedParent" DependencyProperty="{x:Static dx:SimpleButton.GlyphAlignmentProperty}" Value="Top">
                <dxcn:RenderSetter TargetName="Image" Property="Dock" Value="Top"/>
                <dxcn:RenderSetter TargetName="Border" Property="Dock" Value="Top"/>
                <dxcn:RenderSetter TargetName="ContentPresenter" Property="Dock" Value="Bottom"/>
            </dxcn:RenderTrigger>
            <dxcn:RenderTrigger ValueSource="TemplatedParent" DependencyProperty="{x:Static dx:SimpleButton.GlyphAlignmentProperty}" Value="Bottom">
                <dxcn:RenderSetter TargetName="Image" Property="Dock" Value="Bottom"/>
                <dxcn:RenderSetter TargetName="Border" Property="Dock" Value="Bottom"/>
                <dxcn:RenderSetter TargetName="ContentPresenter" Property="Dock" Value="Top"/>
            </dxcn:RenderTrigger>

            <dxcn:MultiRenderTrigger>
                <dxcn:MultiRenderTrigger.Conditions>
                    <dxcn:RenderConditionGroup Operator="Or">
                        <dxcn:RenderCondition ValueSource="TemplatedParent" DependencyProperty="{x:Static dx:SimpleButton.GlyphProperty}" Value="{x:Null}"/>
                        <dxcn:RenderCondition ValueSource="TemplatedParent" DependencyProperty="{x:Static dx:SimpleButton.ContentProperty}" Value="{x:Null}"/>
                    </dxcn:RenderConditionGroup>
                </dxcn:MultiRenderTrigger.Conditions>
                <dxcn:RenderSetter Property="Visibility" TargetName="Border" Value="Collapsed"/>
            </dxcn:MultiRenderTrigger>
        </dxcn:RenderTemplate.Triggers>
    </dxcn:RenderTemplate>
    <ControlTemplate TargetType="{x:Type ButtonBase}" x:Key="{dxt:ButtonThemeKey ResourceKey=ButtonControlTemplate, ThemeName=Office2016White}">
        <dxcn:ButtonChrome x:Name="PART_Owner" RenderTemplate="{StaticResource ResourceKey={dxt:ButtonThemeKey ResourceKey=RenderTemplate, ThemeName=Office2016White}}"/>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="PART_Owner" Property="Opacity" Value="{StaticResource ResourceKey={dxt:DropDownButtonThemeKey ResourceKey=ButtonOpacity, ThemeName=Office2016White}}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    

    <Grid x:Key="btnekle" VerticalAlignment="Center" Height="24" HorizontalAlignment="Left" Width="120">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Image Grid.Column="0" Source="/Content/add.png" Width="16" HorizontalAlignment="Left" Margin="4,0,0,0"></Image>
        <TextBlock Grid.Column="1" VerticalAlignment="Center" Text="Kayıt Ekle" Margin="10,0,0,0" HorizontalAlignment="Left"></TextBlock>
    </Grid>

    <Grid x:Key="btnright" Background="Transparent" VerticalAlignment="Center" Height="15" HorizontalAlignment="Left" Width="120">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Image Grid.Column="0" Source="/Content/right-arrow.png" Width="15" HorizontalAlignment="Left" Margin="4,0,0,0"></Image>
      
    </Grid>

    <Grid x:Key="btnleft" Background="Transparent" VerticalAlignment="Center" Height="15" HorizontalAlignment="Left" Width="120">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Image Grid.Column="0" Source="/Content/left-arrow.png" Width="15" HorizontalAlignment="Left" Margin="4,0,0,0"></Image>

    </Grid>

    <Grid x:Key="btnsettings" VerticalAlignment="Center" Height="27" HorizontalAlignment="Left" Width="120">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Image Grid.Column="0" Source="/Content/settings mini.png" Width="18" HorizontalAlignment="Center" Margin="0,0,0,0"></Image>
        <TextBlock Grid.Column="1" VerticalAlignment="Center" Text="Dışarı Aktar" Margin="10,0,0,0" HorizontalAlignment="Left"></TextBlock>
    </Grid>


   

</ResourceDictionary>